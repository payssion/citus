-- Test creation of cluster-distributed tables and metadata syncing
CREATE TABLE clustered_table (
    key text primary key,
    value jsonb
);
CREATE INDEX ON clustered_table USING GIN (value);
SELECT cluster_create_distributed_table('clustered_table', 'key', 'hash');
 cluster_create_distributed_table 
----------------------------------
 
(1 row)

SELECT cluster_create_shards('clustered_table', 4);
 cluster_create_shards 
-----------------------
 
(1 row)

\c - - - :worker_1_port
\d clustered_table
Table "public.clustered_table"
 Column | Type  | Modifiers 
--------+-------+-----------
 key    | text  | not null
 value  | jsonb | 
Indexes:
    "clustered_table_pkey" PRIMARY KEY, btree (key)
    "clustered_table_value_idx" gin (value)

SELECT partmethod FROM pg_dist_partition
WHERE logicalrelid = 'clustered_table'::regclass;
 partmethod 
------------
 h
(1 row)

SELECT count(*) FROM pg_dist_shard JOIN pg_dist_shard_placement USING (shardid)
WHERE logicalrelid = 'clustered_table'::regclass;
 count 
-------
     4
(1 row)

\c - - - :worker_2_port
\d clustered_table
Table "public.clustered_table"
 Column | Type  | Modifiers 
--------+-------+-----------
 key    | text  | not null
 value  | jsonb | 
Indexes:
    "clustered_table_pkey" PRIMARY KEY, btree (key)
    "clustered_table_value_idx" gin (value)

SELECT partmethod FROM pg_dist_partition
WHERE logicalrelid = 'clustered_table'::regclass;
 partmethod 
------------
 h
(1 row)

SELECT count(*) FROM pg_dist_shard JOIN pg_dist_shard_placement USING (shardid)
WHERE logicalrelid = 'clustered_table'::regclass;
 count 
-------
     4
(1 row)

